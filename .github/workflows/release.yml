name: Release

on:
  push:
    tags:
    - 'v*'

jobs:
  build:
    name: Release Plugin
    runs-on: ubuntu-latest
    env:
      ORG_GRADLE_PROJECT_artifactory_user: '${{secrets.ARTIFACTORY_USER}}'
      ORG_GRADLE_PROJECT_artifactory_password: '${{secrets.ARTIFACTORY_TOKEN}}'
      ARTIFACTORY_USER: '${{secrets.ARTIFACTORY_USER}}'
      ARTIFACTORY_PASSWORD: '${{secrets.ARTIFACTORY_TOKEN}}'
    steps:
      - name: Fix up git URLs
        run: echo -e '[url "https://github.com/"]\n  insteadOf = "git://github.com/"' >> ~/.gitconfig

      - name: checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: |
            11
            17
          distribution: 'zulu'
          cache: 'gradle'

      - name: run tests
        run: ./gradlew test

      - name: build
        run: ./gradlew -PenableCrossCompilerPlugin=true releaseBundle

      - name: get project info
        id: get_project_info
        run: |
          echo ::set-output name=PROJECT::$(basename `pwd`)
          echo ::set-output name=PROJECT_KEBAB::$(basename `pwd` | sed 's/\([a-z0-9]\)\([A-Z]\)/\1_\L\2/g')
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
          echo ::set-output name=REPO::${GITHUB_REPOSITORY}

      - name: build docker image
        run: |
          docker build -t armory/${{ steps.get_project_info.outputs.PROJECT }}:${{ steps.get_project_info.outputs.VERSION }} -f build-tools/Dockerfile .

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_HUB_USER }} -p '${{ secrets.DOCKER_HUB_PASS }}'

      - name: Publish Image to Docker Hub
        run: |
          docker push armory/${{ steps.get_project_info.outputs.PROJECT }}:${{ steps.get_project_info.outputs.VERSION }}

      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: upload release asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./build/distributions/${{ steps.get_project_info.outputs.PROJECT }}-${{ steps.get_project_info.outputs.VERSION }}.zip
          asset_name: ${{ steps.get_project_info.outputs.PROJECT }}-${{ steps.get_project_info.outputs.VERSION }}.zip
          asset_content_type: application/zip

      - name: upload release asset for deck
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./evaluate-artifacts-deck/build/dist/index.js
          asset_name: EvaluateArtifactsStageIndex.js
          asset_content_type: text/javascript
          
      - name: add release to plugin repo
        id: add-release
        uses: armory-io/plugin-metadata-updater@master
        env:
          JAVA_HOME: ''
          GITHUB_OAUTH: ${{ secrets.TOKEN }}
        with:
          metadata: build/distributions/plugin-info.json
          binary_url: https://github.com/${{ steps.get_project_info.outputs.REPO }}/releases/download/${{ steps.get_project_info.outputs.VERSION }}/${{ steps.get_project_info.outputs.PROJECT }}-${{ steps.get_project_info.outputs.VERSION }}.zip
          metadata_repo_url: https://github.com/armory-plugins/pluginRepository
