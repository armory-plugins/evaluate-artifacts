buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
  }
}

apply plugin: "io.spinnaker.plugin.service-extension"
apply plugin: "maven-publish"
apply plugin: "kotlin"
apply plugin: "kotlin-kapt"
apply plugin: "kotlin-spring"

repositories {
  mavenCentral()
}

spinnakerPlugin {
  serviceName = "orca"
  pluginClass = "io.armory.plugin.stage.artifacts.EvaluateArtifactsPlugin"
  requires="orca>=0.0.0"
}

dependencies {
  implementation platform("io.spinnaker.orca:orca-bom:${orcaVersion}")
  compileOnly(enforcedPlatform(group: "io.spinnaker.kork", name: "kork-bom", version: "${korkVersion}"))

  runtimeOnly "io.armory.plugin:plugin-commons:0.0.4"
  compileOnly "io.spinnaker.kork:kork-plugins-spring-api"

  annotationProcessor ("org.pf4j:pf4j:$pf4jVersion")
  annotationProcessor ("org.projectlombok:lombok")
  annotationProcessor platform("io.spinnaker.orca:orca-bom:${orcaVersion}")

  compileOnly "io.spinnaker.kork:kork-plugins-spring-api"
  compileOnly "io.spinnaker.kork:kork-credentials-api"
  compileOnly "io.spinnaker.kork:kork-retrofit"

  compileOnly "io.spinnaker.orca:orca-api"
  compileOnly "io.spinnaker.orca:orca-core"
  compileOnly "io.spinnaker.orca:orca-igor"
  compileOnly ("io.spinnaker.orca:orca-retrofit") {
    exclude group: "org.apache.groovy", module: "groovy"
  }
  compileOnly "org.projectlombok:lombok"


  testImplementation(enforcedPlatform(group: "io.spinnaker.orca", name: "orca-bom", version: "${orcaVersion}"))
  testImplementation "io.spinnaker.orca:orca-api"
  testImplementation "io.spinnaker.orca:orca-api-tck"
  testImplementation "io.spinnaker.orca:orca-queue"
  testImplementation "io.spinnaker.kork:kork-plugins-tck"
  testImplementation "io.spinnaker.orca:orca-test-groovy"
  testImplementation (group: 'io.spinnaker.orca', name: 'orca-core')
  testImplementation (group: 'io.spinnaker.kork', name: 'kork-plugins-spring-api')
  testImplementation "io.armory.commons:armory-commons-plugins:${armoryCommonsVersion}"


  testImplementation "org.junit.jupiter:junit-jupiter-api:5.5.2"
  testImplementation "io.strikt:strikt-core:0.22.1"
  testImplementation "dev.minutest:minutest:1.10.0"
  testImplementation "io.mockk:mockk:1.9.3"
  testImplementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.11.1"
  testImplementation "javax.servlet:javax.servlet-api:4.0.1"

  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.4.0"
  testRuntimeOnly "org.junit.platform:junit-platform-launcher:1.4.0"
  testRuntimeOnly "org.junit.platform:junit-platform-commons:1.5.2"

}

compileTestKotlin {
  kotlinOptions {
    languageVersion = "1.6"
    jvmTarget = "17"
  }
}

tasks.withType(Test) {
  useJUnitPlatform()
}
